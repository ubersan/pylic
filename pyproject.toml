[tool.poetry]
name = "pylic"
version = "2.0.10"
description = "A Python license checker"
authors = ["Sandro Huber <sandrochuber@gmail.com>"]
keywords = ["cli", "license"]
license = "MIT License"
readme = "README.md"
homepage = "https://github.com/ubersan/pylic"
repository = "https://github.com/ubersan/pylic"
classifiers = ["Development Status :: 3 - Alpha"]

[tool.poetry.dependencies]
python = "^3.6"
toml = "^0.10.2"
importlib-metadata = "^4.6.4"
cleo = "^0.8.1"

[tool.poetry.dev-dependencies]
black = {version = "^21.8b0", python = "^3.6.2"}
flake8 = "^3.9.2"
mypy = "^0.910"
taskipy = "^1.8.1"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pytest-mock = "^3.6.1"
isort = {version = "^5.9.3", python = "^3.6.1"}
types-toml = "^0.1.5"

[tool.poetry.scripts]
pylic = 'pylic.cli.app:main'

[tool.taskipy.tasks]
quality = "black . && flake8 --count . && isort . && mypy ."
test = "pytest --cov=./ --cov-report=xml"
check_licenses = "python -m pylic check"
get_current_version = "echo -n v$(sed '3q;d' pyproject.toml | awk '{print $3}' | tail -c +2 | head -c -2)"
release = " git tag $(task get_current_version) && git push origin $(task get_current_version)"

[tool.pylic]
safe_licenses = [
    "BSD License",
    "Apache Software License",
    "MIT License",
    "Python Software Foundation License",
    "Mozilla Public License 2.0 (MPL 2.0)"
]

[tool.black]
line_length = 120

[tool.isort]
multi_line_output = 3
include_trailing_comma = "True"
force_grid_wrap = 0
use_parentheses = "True"
ensure_newline_before_comments = "True"
line_length = 120

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "from importlib_metadata import Distribution, distributions", # tested by integration tests
    "app.run()",  # tested by integration tests
]

[tool.mypy]
files = ["pylic", "tests"]
namespace_packages = true
explicit_package_bases = true
disallow_any_unimported = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["cleo.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
