[tool.poetry]
authors = ["Sandro Huber <sandrochuber@gmail.com>"]
classifiers = ["Development Status :: 3 - Alpha"]
description = "A Python license checker"
homepage = "https://github.com/ubersan/pylic"
keywords = ["cli", "license"]
license = "MIT License"
name = "pylic"
readme = "README.md"
repository = "https://github.com/ubersan/pylic"
version = "3.1.1"

[tool.poetry.dependencies]
importlib-metadata = "^5.0.0"
python = "^3.7"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
flake8 = "^3.9.2"
isort = "^5.10.1"
mypy = "^0.942"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
taskipy = "^1.10.1"
types-toml = "^0.10.5"

[tool.poetry.scripts]
pylic = 'pylic.cli.app:main'

[tool.taskipy.tasks]
check_licenses = "python -m pylic check"
get_current_version = "echo -n v$(sed '11q;d' pyproject.toml | awk '{print $3}' | tail -c +2 | head -c -2)"
quality = "black . && flake8 --max-line-length 140 --count . && isort . && mypy ."
release = " git tag $(task get_current_version) && git push origin $(task get_current_version)"
test = "pytest --cov=./ --cov-report=xml"

[tool.pylic]
safe_licenses = [
  "BSD License",
  "Apache Software License",
  "MIT License",
  "Python Software Foundation License",
  "Mozilla Public License 2.0 (MPL 2.0)",
]

[tool.black]
line_length = 140

[tool.isort]
ensure_newline_before_comments = "True"
force_grid_wrap = 0
include_trailing_comma = "True"
line_length = 140
multi_line_output = 3
use_parentheses = "True"

[tool.coverage.report]
exclude_lines = [
  "if __name__ == .__main__.:",
  "from importlib_metadata import Distribution, distributions", # tested by integration tests
  "app.run()", # tested by integration tests
  "pragma: no cover",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
explicit_package_bases = true
files = ["pylic", "tests"]
namespace_packages = true
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
