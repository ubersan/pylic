[project]
name = "pylic"
version = "5.0.0"
description = "A Python license checker"
readme = "README.md"
authors = [
    { name = "Sandro Huber", email = "sandrochuber@gmail.com" }
]
keywords = ["cli", "license", "checker"]
license = "MIT"
requires-python = ">=3.9"
dependencies = [
    "toml>=0.10.2",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "ruff>=0.9.10",
    "taskipy>=1.14.1",
]

[project.scripts]
pylic = "pylic.cli.app:main"

[tool.pylic]
safe_licenses = [
    "Apache Software License",
    "BSD License",
    "MIT",
    "MIT License",
    "Python Software Foundation License"
]

[tool.ruff]
line-length = 140

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
explicit_package_bases = true
namespace_packages = true
no_implicit_optional = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.taskipy.tasks]
check-format = "echo 'Checking formatting ...' && ruff format --diff --quiet ."
check-lint = "echo 'Checking linting ...' && ruff check --quiet ."
check-types = "echo 'Checking types ...' && mypy --pretty --no-error-summary ."
check-licenses = "echo 'Checking licenses ...' && python -m pylic check --quiet"
check = "task check-format && task check-lint && task check-types && task check-licenses && echo âœ…"
fix-format = "echo 'Fixing formatting ...' && ruff format ."
fix-lint = "echo 'Fixing linting ...' && ruff check --fix ."
fix = "task fix-format ; task fix-lint"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
